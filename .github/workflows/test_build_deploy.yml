name: Test Build Deploy

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  IMAGE: buscador_cep_node

jobs:

  test:
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: test

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Docker configuration
      run: |-
        gcloud auth configure-docker
    
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:latest" \
          .
          
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:latest"
        
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        
    - name: Set up Image in manifest file
      run: sed -i "s/PROJECT_ID/$PROJECT_ID/g" ./src/deployment.yaml
        
    - name: Deploy to Kubernetes
      run: kubectl apply -f ./src/deployment.yaml
      
    - name: Update image in deployment
      run: kubectl set image deployment/buscacep-deployment buscacep=gcr.io/$PROJECT_ID/$IMAGE:latest 

